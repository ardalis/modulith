# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI

on:
  push:
    tags:
    - '*.*.*'
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        template: 
          - working-dir: modulith
            project: TestModulith.sln
  
    name: 'Build project source: ${{ matrix.template.working-dir }}'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      working-directory: working/content/${{ matrix.template.working-dir }}
      run: dotnet restore ${{ matrix.template.project }}
    - name: Build
      working-directory: working/content/${{ matrix.template.working-dir }}
      run: dotnet build ${{ matrix.template.project }} --no-restore
    - name: Test
      working-directory: working/content/${{ matrix.template.working-dir }}
      run: dotnet test ${{ matrix.template.project }} --no-build --verbosity normal
      
  install:
    needs: [build]
    name: 'Install template'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install
        working-directory: working
        run: dotnet new install .
        
      - name: Instance solution
        working-directory: manual-test
        run: dotnet new modulith -n eShop --with-module Payments 
        
      - name: Instance basic project
        working-directory: manual-test/eShop
        run: dotnet new modulith --add basic-module --module-name Shipments --solution eShop

      - name: Add project reference
        working-directory: manual-test/eShop
        run: dotnet add eShop.Web/eShop.Web.csproj reference Shipments/eShop.Shipments/eShop.Shipments.csproj
      
      - name: Instance ddd project
        working-directory: manual-test/eShop
        run: dotnet new modulith --add ddd-module --module-name Billing --solution eShop
      
      - name: Add project reference
        working-directory: manual-test/eShop
        run: dotnet add eShop.Web/eShop.Web.csproj reference Billing/eShop.Billing/eShop.Billing.csproj
        
      - name: Restore
        working-directory: manual-test/eShop
        run: dotnet restore

      - name: Build
        working-directory: manual-test/eShop/eShop.Web
        run: dotnet build --no-restore

      - name: Test
        working-directory: manual-test/eShop
        run: dotnet test --verbosity normal
  
  pack:
    needs: [install]
    name: 'Pack'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Clean
        working-directory: working
        run: dotnet clean -c release
        
      - name: Pack
        run: dotnet pack working/Ardalis.Modulith.csproj -c release -o artifacts
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.2
        with:
          name: artifacts
          path: artifacts/**/*
          error: Could not upload Nuget Package
          if-no-files-found: error
        
          
